<UserControl x:Class="Just.RegexNet.RegexNetCtrl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Just.RegexNet"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Just.Base;Component/Theme/Default.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="1" Orientation="Horizontal">
            <Button Click="ButtonOption_Click" Style="{StaticResource MainButton}" Margin="5,5,0,5" Name="ButtonOption">
                <StackPanel Orientation="Horizontal">
                    <Path
                        x:Name="ExpandIconPath"
                        Width="10"
                        Margin="0,0,5,0"
                        Stroke="White"
                        Style="{DynamicResource DropDownPath}" />
                    <TextBlock>选项</TextBlock>
                </StackPanel>
            </Button>
            <Popup
                x:Name="OptionPopup"
                AllowsTransparency="True"
                Placement="Bottom"
                PlacementTarget="{Binding ElementName=ButtonOption}"
                StaysOpen="False">
                <Border Style="{DynamicResource MenuBorder}">
                    <StackPanel Name="MenuOptions">
                        <Border Style="{DynamicResource MenuItem}" MouseUp="BorderOptionAll_MouseUp">
                            <TextBlock FontWeight="Bold" Foreground="Red" Text="取消所有" />
                        </Border>
                        <Border Style="{DynamicResource MenuSeparator}" />
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="1" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="IgnoreCase：不区分大小写的匹配。">忽略大小写</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="2" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="Multiline：更改 ^ 和 $ 的含义，使它们分别在任意一行的行首和行尾匹配，而不仅仅在整个字符串的开头和结尾匹配。">多行模式</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="16" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="Singleline：更改点 (.) 的含义，以使它与每个字符（而不是除 \n 之外的所有字符）匹配。">单行模式</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="32" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="IgnorePatternWhitespace：消除模式中的非转义空白并启用由 # 标记的注释。但是，此值不影响或消除标记单独的正则表达式语言元素的开头的字符类、数值量词或令牌中的空白。">忽略空白</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="64" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="RightToLeft：指定搜索从右向左而不是从左向右进行。">从右向左</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="4" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="ExplicitCapture：指定唯一有效的捕获是显式命名或编号的 (?&lt;name&gt;…) 形式的组。这使未命名的圆括号可以充当非捕获组，并且不会使表达式的语法 (?:...) 显得笨拙。">仅显式捕获</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="8" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="Compiled：指定将正则表达式编译为程序集。这会产生更快的执行速度，但会增加启动时间。">编译模式</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="256" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="ECMAScript：为表达式启用符合 ECMAScript 的行为。">ECMAScript</CheckBox>
                        </Border>
                        <Border Style="{DynamicResource CheckMenuItem}">
                            <CheckBox Tag="512" Style="{StaticResource MenuItemCheckBox}" Padding="10" ToolTip="CultureInvariant：指定忽略语言中的区域性差异。">忽略语言区域</CheckBox>
                        </Border>
                    </StackPanel>
                </Border>
            </Popup>
            <Button Click="ButtonReset_Click" ToolTip="清空输出结果，重置匹配位置" Style="{StaticResource RedButton}" Margin="5,5,0,5">重置</Button>
            <Button Click="ButtonIsMatch_Click" ToolTip="IsMatch：是否存在匹配项" Margin="5,5,0,5">是否匹配</Button>
            <Button Click="ButtonMatch_Click" ToolTip="Match：查找下一个匹配项" Margin="5,5,0,5">匹配</Button>
            <Button Click="ButtonMatches_Click" ToolTip="Matches：搜索所有匹配项" Margin="5,5,0,5">全部匹配</Button>
            <Button Click="ButtonReplace_Click" ToolTip="Replace：使用替换表达式替换所有匹配的字符串" Margin="5,5,0,5">替换</Button>
            <Button Click="ButtonSplit_Click" ToolTip="Split：将输入字符串拆分为数组" Margin="5,5,0,5">分割</Button>
        </WrapPanel>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="2*"/>
                <RowDefinition Height="5"/>
                <RowDefinition Height="2*"/>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Row="0" Grid.Column="1" Grid.RowSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <GridSplitter Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <TextBox Grid.Row="0" Grid.Column="0" Style="{StaticResource MutliLineBox}" ToolTip="正则表达式" Text="{Binding Pattern,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>
            <TextBox Grid.Row="0" Grid.Column="2" Style="{StaticResource MutliLineBox}" ToolTip="替换表达式" Text="{Binding Repalcement,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>

            <TextBox Grid.Row="2" Grid.Column="0" Style="{StaticResource MutliLineBox}" ToolTip="输入字符串" Text="{Binding Input,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" Name="TextBox_Input" />
            <TextBox Grid.Row="2" Grid.Column="2" Style="{StaticResource MutliLineBox}" ToolTip="输出结果" Text="{Binding Result}" IsReadOnly="True"/>

            <DataGrid Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="3" ItemsSource="{Binding MatchData}" AutoGenerateColumns="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="序号" Binding="{Binding Index}"/>
                    <DataGridTextColumn Header="值" Binding="{Binding Value}"/>
                </DataGrid.Columns>
                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <DataGrid ItemsSource="{Binding Groups}" AutoGenerateColumns="False" IsReadOnly="True" MaxHeight="200">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="序号" Binding="{Binding Index}"/>
                                <DataGridTextColumn Header="组名" Binding="{Binding GroupName}"/>
                                <DataGridTextColumn Header="值" Binding="{Binding Value}"/>
                                <DataGridTextColumn Header="位置" Binding="{Binding Position}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DataTemplate>
                </DataGrid.RowDetailsTemplate>
            </DataGrid>
        </Grid>
    </Grid>
</UserControl>
