<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:GenLibrary.GenWindows" 
                    xmlns:Gen="clr-namespace:GenLibrary"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                    mc:Ignorable="d">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/GenLibrary;component/Extended/GenWindows/GlassWindow/Themes/ColorBrush.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

    <!--正常按钮背景色-->
    <LinearGradientBrush x:Key="ButtonBackGroundBrushKey" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#19C9C9C9" Offset="0"/>
        <GradientStop Color="#198F8D8D" Offset="1"/>
        <GradientStop Color="#26A6A2A2" Offset="0.632"/>
        <GradientStop Color="#266C6868" Offset="0.845"/>
    </LinearGradientBrush>
    <!--鼠标经过时按钮背景色-->
    <SolidColorBrush x:Key="MouseOverButtonBackGroundBrushKey" Color="#FF66BBEC" />
    <!--鼠标按下时按钮背景色-->
    <SolidColorBrush x:Key="MousePressButtonBackGroundBrushKey" Color="#FF2A9DDE" />
    <!--鼠标经过时的按钮阴影效果-->
    <DropShadowEffect x:Key="MouseOverButtonShadow" BlurRadius="20" Direction="0" RenderingBias="Performance"  ShadowDepth="4" Color="#FF23C8D8"/>
    <!--最小化按钮-->
    <Style x:Key="MinButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" BorderThickness="1" CornerRadius="0" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            SnapsToDevicePixels="True">
                        <Grid x:Name="gridBack" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->                           
                            <Rectangle Fill="White" HorizontalAlignment="Stretch" Margin="13,8" RadiusY="0" RadiusX="0" Stroke="Black" StrokeThickness="1" Width="Auto" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource MouseOverButtonBackGroundBrushKey}"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource MousePressButtonBackGroundBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--最大化按钮-->
    <Style x:Key="MaxButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="0" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容,由内外两个矩形生成复合路径，及相交区域路径-->

                            <Path x:Name="Rect" Data="M3.5,3.5 L3.5,8.5 11.5,8.5 11.5,3.5 z M0.5,0.5 L14.5,0.5 14.5,11.5 0.5,11.5 z" Fill="White" HorizontalAlignment="Stretch" Margin="13,4" Stretch="Fill" Stroke="Black" StrokeThickness="1" Width="Auto" SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource MouseOverButtonBackGroundBrushKey}"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource MousePressButtonBackGroundBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--还原化按钮-->
    <Style x:Key="NormalButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="0" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->
                            <Path x:Name="RectOut" Data="M3.5,6.364 L3.5,9.364 8.5,9.364 8.5,6.364 z M0.5,3.364 L11.5,3.364 11.5,12.364 0.5,12.364 z M3.565,0.5 L14.565,0.5 14.565,9.5 11.5,9.5 11.5,3.364 3.565,3.364 z" Fill="White" HorizontalAlignment="Stretch" Margin="13,3,12.2,3" Stretch="Fill" Stroke="Black" StrokeThickness="1" Width="Auto" SnapsToDevicePixels="True"/>

                        </Grid>
                    </Border>


                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource MouseOverButtonBackGroundBrushKey}"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" 
                                    Value="{StaticResource MousePressButtonBackGroundBrushKey}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--关闭按钮-->
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="Black"/>
        <!--修改模板属性-->
        <Setter Property="Template">
            <Setter.Value>
                <!--控件模板-->
                <ControlTemplate TargetType="{x:Type Button}">
                    <!--背景色-->
                    <Border x:Name="borderRoot" SnapsToDevicePixels="True" BorderThickness="1" CornerRadius="0" BorderBrush="#FF7A7A7A" Background="{TemplateBinding Background}"						
                            >
                        <Grid x:Name="gridBack" SnapsToDevicePixels="True" HorizontalAlignment="Stretch" Margin="1" Width="Auto" Background="{StaticResource ButtonBackGroundBrushKey}">
                            <!--按钮内容-->
                            <Path  Data="M109.31943,26.252041 L106.85073,22.922285 104.19958,22.922404 103.48874,24.121188 106.78672,28.294109 103.40697,32.244015 103.98072,33.415888 106.63193,33.442522 109.30805,30.586156 111.74279,33.443516 113.80631,33.456454 115.05929,32.128931 111.78359,28.509615 115.05899,24.085674 114.33044,22.860567 111.97989,22.86015 z" Fill="White" HorizontalAlignment="Stretch" Margin="13,3" Stretch="Fill" Stroke="#FF131313" StrokeThickness="1" Width="Auto" SnapsToDevicePixels="True">
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="gridBack" Value="Red"/>
                            <Setter Property="Effect" Value="{StaticResource MouseOverButtonShadow}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="gridBack" Value="#FFDC4C4C"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" Value="0.2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--窗口激活时的阴影效果-->
    <DropShadowEffect x:Key="ActivedWindowOutFrameShadow" BlurRadius="18" Direction="-90" RenderingBias="Performance"  ShadowDepth="3"/>
    <!--窗口模板/Win7风格-->
    <ControlTemplate x:Key="Window7ControlTemplate" TargetType="{x:Type local:GlassWindow}">
        <!--<Grid Margin="{TemplateBinding WindowShadowMargin}">-->
             <!--外边框-->
        <AdornerDecorator SnapsToDevicePixels="True">
            <Border x:Name="PART_borderFrame" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="6"
		     	BorderThickness="0"  SnapsToDevicePixels="True" Background="{TemplateBinding GlassBackgroundBrush}">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!--标题栏，设计高度，及标题高度，背景设置最低透明度，可以响应鼠标-->
                    <Border Width="Auto" Height="Auto" CornerRadius="0" 
					        x:Name="borderTitle" Grid.ColumnSpan="1" Background="#02EEECEC" Margin="7,2,7,0">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!-- 标题背部内容绑定-->
                            <ContentControl Margin="0" Grid.Row="0" Grid.ColumnSpan="2" Content="{TemplateBinding TitleBackContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                            <!-- 左侧文本及图片 -->
                            <StackPanel Grid.Column="0" Grid.ColumnSpan="1" Margin="2" Orientation="Horizontal" VerticalAlignment="Top">
                                <!--窗口图标显示-->
                                <Image x:Name="image" HorizontalAlignment="Stretch" Margin="0,0,5,0" VerticalAlignment="Top" Width="Auto" Source="{TemplateBinding Icon}" Height="20"/>
                                <!-- 标题左侧分内容绑定 -->
                                <ContentControl Content="{TemplateBinding TitleLeftContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                                <!--窗口标题文字显示-->
                                <Grid VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="3"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="1"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3">
                                        <Rectangle Fill="#99FFFFFF" StrokeThickness="0" ></Rectangle>
                                        <Border.Effect>
                                            <BlurEffect Radius="10" KernelType="Gaussian">
                                            </BlurEffect>
                                        </Border.Effect>
                                    </Border>
                                    <TextBlock     x:Name="Title"  FontSize="14" 
								                  Foreground="Black" VerticalAlignment="Center"
                                                  Text="{TemplateBinding Title}" HorizontalAlignment="Center" Width="Auto"
                                                Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="1">

                                    </TextBlock>

                                </Grid>

                            </StackPanel>
                            <!-- 右侧Windows按钮-->
                            <StackPanel Grid.Column="1" HorizontalAlignment="Right" Height="30"
							Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                                <!-- 标题右侧部分内容绑定，位于Windows按钮左边,距离顶部3mm,与TitleBackContent一致 -->
                                <ContentControl  Content="{TemplateBinding TitleRightContent}" Margin="0,0,100,0"/>
                                <!--最小化按钮-->
                                <!--<Button x:Name="btnMin" Margin="0" Style="{StaticResource MinButtonStyle}" ToolTip="最小化" Background="#0C74B8E8"
								Command="{Binding MinWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding MinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>
                                -->
                                <!--最大化按钮-->
                                <!--
                                <StackPanel Orientation="Horizontal" Visibility="{Binding MaxButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                    <Button x:Name="Restore" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="还原"  Visibility="Collapsed" 
                                                        Style="{StaticResource NormalButtonStyle }" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                    </Button>
                                    <Button x:Name="Maximize" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="最大化"  
                                                        Style="{StaticResource MaxButtonStyle}" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                    </Button>
                                </StackPanel>
                                -->
                                <!--关闭按钮-->
                                <!--
                            <Button x:Name="btnClose" Margin="0" Style="{StaticResource CloseButtonStyle}" ToolTip="关闭窗口" Background="#0C74B8E8"
								Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>-->

                            </StackPanel>

                        </Grid>
                    </Border>
                    <!--内容区,Margin表示距离外边框的距离-->
                    <Border x:Name="borderContent" Margin="{TemplateBinding BorderThickness}" Grid.Row="1" Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding InnerBorderThinkness}"  BorderBrush="{TemplateBinding BorderBrush}">
                        <!--<Gen:BusyIndicator x:Name="busyIndicator1"  BusyContent="正在加载..." DisplayAfter="0" 
                                           IsBusy="{TemplateBinding IsBusy}" ProgressBarValue="{TemplateBinding ProgressBarValue}"
                                           BusyContentTemplate="{TemplateBinding BusyContentTemplate}"
                                           Style="{TemplateBinding BusyIndicatorStyle}">-->
                            <ContentPresenter HorizontalAlignment="Stretch"/>
                        <!--</Gen:BusyIndicator>-->
                    </Border>
                </Grid>
            </Border>

        </AdornerDecorator>
        <!--</Grid>-->
        <ControlTemplate.Triggers>
            <!--窗口激活时的操作-->
            <Trigger Property="IsActive" Value="True">
                <Setter Property="GlassBackgroundBrush" Value="{DynamicResource ActiveTitleBackgroundBrushWin7}"/>
                <!--<Setter Property="Background" TargetName="btnMin" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Restore" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Maximize" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="btnClose" Value="#66EA4848" />-->
            </Trigger>
            <!--最大化时设置阴影尺寸为0，以及内容区域扩充-->
            <Trigger Property="WindowState" Value="Maximized">
                <Setter Property="BorderThickness" Value="7,0,7,7" />
                <Setter Property="Margin" TargetName="borderTitle" Value="7,7,7,0" />
                <!--<Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />-->
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <!--<Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />-->
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter Property="InnerBorderThinkness"  Value="0" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--窗口模板/Win10风格-->
    <ControlTemplate x:Key="Window10ControlTemplate" TargetType="{x:Type local:GlassWindow}">
        <!--<Grid Margin="{TemplateBinding WindowShadowMargin}">-->
        <!--外边框-->
        <AdornerDecorator SnapsToDevicePixels="True">
            <Border x:Name="PART_borderFrame" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="0"
		     	BorderThickness="1"  SnapsToDevicePixels="True" Background="{DynamicResource TitleBackgroundBrushWin10}">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>-->
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                    <!--标题栏，设计高度，及标题高度，背景设置最低透明度，可以响应鼠标-->
                    <Border Width="Auto" Height="Auto" CornerRadius="0" 
					        x:Name="borderTitle"  Background="#02EEECEC" Margin="5,0" SnapsToDevicePixels="True">
                    <Grid >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <!-- 标题背部内容绑定-->
                        <ContentControl Margin="0" Grid.Row="0" Grid.ColumnSpan="2" Content="{TemplateBinding TitleBackContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                        <!-- 左侧文本及图片 -->
                        <StackPanel Grid.Column="0" Grid.ColumnSpan="1" Margin="2" Orientation="Horizontal" VerticalAlignment="Top">
                            <!--窗口图标显示-->
                            <Image x:Name="image" HorizontalAlignment="Stretch" Margin="0,0,5,0" VerticalAlignment="Top" Width="Auto" Source="{TemplateBinding Icon}" Height="20"/>
                            <!-- 标题左侧分内容绑定 -->
                            <ContentControl Content="{TemplateBinding TitleLeftContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                            <!--窗口标题文字显示-->
                            <Grid VerticalAlignment="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="3"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="3"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="1"/>
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3">
                                    <Rectangle Fill="#99FFFFFF" StrokeThickness="0" ></Rectangle>
                                    <Border.Effect>
                                        <BlurEffect Radius="10" KernelType="Gaussian">
                                        </BlurEffect>
                                    </Border.Effect>
                                </Border>
                                <TextBlock     x:Name="Title"  FontSize="14" 
								                  Foreground="Black" VerticalAlignment="Center"
                                                  Text="{TemplateBinding Title}" HorizontalAlignment="Center" Width="Auto"
                                                Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="1">

                                </TextBlock>

                            </Grid>

                        </StackPanel>
                        <!-- 右侧Windows按钮-->
                        <StackPanel Grid.Column="1" HorizontalAlignment="Right"  SnapsToDevicePixels="True" Height="30"
							Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                            <!-- 标题右侧部分内容绑定，位于Windows按钮左边,距离顶部3mm,与TitleBackContent一致 -->
                            <ContentControl  Content="{TemplateBinding TitleRightContent}" Margin="0"/>
                            <!--最小化按钮-->
                            <Button x:Name="btnMin" Margin="0" Style="{StaticResource MinButtonStyle}" ToolTip="最小化" Background="#0C74B8E8"
								Command="{Binding MinWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding MinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>
                            <!--最大化按钮-->
                            <StackPanel Orientation="Horizontal" Visibility="{Binding MaxButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                <Button x:Name="Restore" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="还原"  Visibility="Collapsed" 
                                                        Style="{StaticResource NormalButtonStyle }" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                </Button>
                                <Button x:Name="Maximize" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="最大化"  
                                                        Style="{StaticResource MaxButtonStyle}" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                </Button>
                            </StackPanel>
                            <!--关闭按钮-->
                            <Button x:Name="btnClose" Margin="0" Style="{StaticResource CloseButtonStyle}" ToolTip="关闭窗口" Background="#0C74B8E8"
								Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>

                        </StackPanel>

                    </Grid>
                </Border>
                    <!--内容区,Margin表示距离外边框的距离,BorderThickness会占用尺寸-->                  
                    <Border x:Name="borderContent" Margin="{TemplateBinding BorderThickness}" Grid.Row="1" Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding InnerBorderThinkness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <!--<Gen:BusyIndicator x:Name="busyIndicator1"  BusyContent="正在加载..." DisplayAfter="0" 
                                           IsBusy="{TemplateBinding IsBusy}" ProgressBarValue="{TemplateBinding ProgressBarValue}"
                                           BusyContentTemplate="{TemplateBinding BusyContentTemplate}"
                                           Style="{TemplateBinding BusyIndicatorStyle}">-->
                             <ContentPresenter HorizontalAlignment="Stretch"/>
                          <!--</Gen:BusyIndicator>-->
                     </Border>
                    
                </Grid>
        </Border>

        </AdornerDecorator>
        <!--</Grid>-->
        <ControlTemplate.Triggers>
            <!--窗口激活时的操作-->
            <Trigger Property="IsActive" Value="True">
                <Setter Property="Background" TargetName="PART_borderFrame" Value="{DynamicResource ActiveTitleBackgroundBrushWin10}"/>
                <Setter Property="Background" TargetName="btnMin" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Restore" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Maximize" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="btnClose" Value="#66EA4848" />
            </Trigger>
            <!--最大化时设置阴影尺寸为0，以及内容区域扩充-->
            <Trigger Property="WindowState" Value="Maximized">
                <!--<Setter Property="BorderThickness" Value="0" />-->
                <Setter Property="BorderThickness" TargetName="PART_borderFrame" Value="0" />
                <Setter Property="Margin" TargetName="borderTitle" Value="7,7,7,0" />
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="ResizeMode" Value="NoResize">
                <Setter Property="InnerBorderThinkness" Value="0" />
                <Setter Property="MinButtonVisibility" Value="Collapsed" />
                <Setter Property="MaxButtonVisibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--窗口模板/Win8风格-->
    <ControlTemplate x:Key="Window8ControlTemplate" TargetType="{x:Type local:GlassWindow}">
        <!--<Grid Margin="{TemplateBinding WindowShadowMargin}">-->
        <!--外边框-->
        <AdornerDecorator>
            <Border x:Name="PART_borderFrame" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="6"
		     	BorderThickness="1"  SnapsToDevicePixels="True" Background="{TemplateBinding GlassBackgroundBrush}">
                <!--<Border.Effect>
                    <DropShadowEffect BlurRadius="6" Direction="-90" RenderingBias="Performance"  ShadowDepth="1"/>
                </Border.Effect>-->
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!--标题栏，设计高度，及标题高度，背景设置最低透明度，可以响应鼠标-->
                    <Border Width="Auto" Height="Auto" CornerRadius="0" 
					        x:Name="borderTitle" Grid.ColumnSpan="1" Background="#02EEECEC" Margin="5,1">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <!-- 标题背部内容绑定-->
                            <ContentControl Margin="0" Grid.Row="0" Grid.ColumnSpan="2" Content="{TemplateBinding TitleBackContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                            <!-- 左侧文本及图片 -->
                            <StackPanel Grid.Column="0" Grid.ColumnSpan="1" Margin="2" Orientation="Horizontal" VerticalAlignment="Top">
                                <!--窗口图标显示-->
                                <Image x:Name="image" HorizontalAlignment="Stretch" Margin="0,0,5,0" VerticalAlignment="Top" Width="Auto" Source="{TemplateBinding Icon}" Height="20"/>
                                <!-- 标题左侧分内容绑定 -->
                                <ContentControl Content="{TemplateBinding TitleLeftContent}" WindowChrome.IsHitTestVisibleInChrome="True"/>
                                <!--窗口标题文字显示-->
                                <Grid VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="3"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="1"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="1"/>
                                    </Grid.RowDefinitions>
                                    <Border Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Grid.RowSpan="3">
                                        <Rectangle Fill="#99FFFFFF" StrokeThickness="0" ></Rectangle>
                                        <Border.Effect>
                                            <BlurEffect Radius="10" KernelType="Gaussian">
                                            </BlurEffect>
                                        </Border.Effect>
                                    </Border>
                                    <TextBlock     x:Name="Title"  FontSize="14" 
								                  Foreground="Black" VerticalAlignment="Center"
                                                  Text="{TemplateBinding Title}" HorizontalAlignment="Center" Width="Auto"
                                                Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="1">

                                    </TextBlock>

                                </Grid>

                            </StackPanel>
                            <!-- 右侧Windows按钮-->
                            <StackPanel Grid.Column="1" HorizontalAlignment="Right" Height="30"
							Orientation="Horizontal" VerticalAlignment="Top" WindowChrome.IsHitTestVisibleInChrome="True">
                                <!-- 标题右侧部分内容绑定，位于Windows按钮左边,距离顶部3mm,与TitleBackContent一致 -->
                                <ContentControl  Content="{TemplateBinding TitleRightContent}" Margin="0"/>
                                <!--最小化按钮-->
                                <Button x:Name="btnMin" Margin="0" Style="{StaticResource MinButtonStyle}" ToolTip="最小化" Background="#0C74B8E8"
								Command="{Binding MinWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding MinButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>
                                <!--最大化按钮-->
                                <StackPanel Orientation="Horizontal" Visibility="{Binding MaxButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Margin="0">
                                    <Button x:Name="Restore" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="还原"  Visibility="Collapsed" 
                                                        Style="{StaticResource NormalButtonStyle }" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                    </Button>
                                    <Button x:Name="Maximize" Command="{Binding MaxWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="最大化"  
                                                        Style="{StaticResource MaxButtonStyle}" Width="45" Height="24" Background="#0C74B8E8" VerticalAlignment="Top">
                                    </Button>
                                </StackPanel>
                                <!--关闭按钮-->
                                <Button x:Name="btnClose" Margin="0" Style="{StaticResource CloseButtonStyle}" ToolTip="关闭窗口" Background="#0C74B8E8"
								Command="{Binding CloseWindowCommand, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Top"
								Visibility="{Binding CloseButtonVisibility, RelativeSource={RelativeSource TemplatedParent}}" Width="45" Height="24"/>

                            </StackPanel>

                        </Grid>
                    </Border>
                    <!--内容区,Margin表示距离外边框的距离-->
                    <Border Margin="{TemplateBinding BorderThickness}" Grid.Row="1" Background="{TemplateBinding Background}" 
                        BorderThickness="{TemplateBinding InnerBorderThinkness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <!--<Gen:BusyIndicator x:Name="busyIndicator1"  BusyContent="正在加载..." DisplayAfter="0" 
                                           IsBusy="{TemplateBinding IsBusy}" ProgressBarValue="{TemplateBinding ProgressBarValue}"
                                           BusyContentTemplate="{TemplateBinding BusyContentTemplate}"
                                           Style="{TemplateBinding BusyIndicatorStyle}">-->
                            <ContentPresenter HorizontalAlignment="Stretch"/>
                        <!--</Gen:BusyIndicator>-->
                    </Border>
                </Grid>
            </Border>

        </AdornerDecorator>
        <!--</Grid>-->
        <ControlTemplate.Triggers>
            <!--窗口激活时的操作-->
            <Trigger Property="IsActive" Value="True">
                <Setter Property="GlassBackgroundBrush" Value="{DynamicResource ActiveTitleBackgroundBrushWin8}"/>
                <Setter Property="Background" TargetName="btnMin" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Restore" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="Maximize" Value="#2694C8EC" />
                <Setter Property="Background" TargetName="btnClose" Value="#66EA4848" />
            </Trigger>
            <!--最大化时设置阴影尺寸为0，以及内容区域扩充-->
            <Trigger Property="WindowState" Value="Maximized">
                <!--<Setter Property="WindowShadowMargin" Value="0" />-->
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Margin" TargetName="borderTitle" Value="0" />
                <!--<Setter Property="Effect" TargetName="borderFrame" Value="{x:Null}" />-->
                <Setter TargetName="Maximize" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="Restore" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="WindowState" Value="Normal">
                <Setter TargetName="Maximize" Property="Visibility" Value="Visible" />
                <Setter TargetName="Restore" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--窗口整体风格-->
    <Style TargetType="{x:Type local:GlassWindow}">
        <Setter Property="Foreground" 
			Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="#FFC5C5C5" />        
        <Setter Property="OpacityMask" Value="White"/>
        <Setter Property="BorderThickness" Value="5,0,5,5" />
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Style.Triggers>
            <Trigger Property="OSType" Value="Windows7">
                <Setter Property="BorderThickness" Value="7,0,7,7" />
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome GlassFrameThickness="-1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="GlassBackgroundBrush" Value="{DynamicResource TitleBackgroundBrushWin7}"/>
                <Setter Property="Template" Value="{StaticResource Window7ControlTemplate}" />               
            </Trigger>
            <Trigger Property="OSType" Value="Windows10">
                <!--用于对于win10/8系统设定内部内容区域距离外边框的间隔-->
                <Setter Property="GlassBackgroundBrush" Value="{DynamicResource TitleBackgroundBrushWin10}"/>
                <Setter Property="WindowChrome.WindowChrome">
                    <Setter.Value>
                        <WindowChrome CornerRadius="0" UseAeroCaptionButtons="False" NonClientFrameEdges="None" ResizeBorderThickness="6" GlassFrameThickness="1"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template" Value="{StaticResource Window10ControlTemplate}" />
            </Trigger>
            <Trigger Property="OSType" Value="Windows8">
                <!--用于对于win10/8系统设定内部内容区域距离外边框的间隔-->
                <Setter Property="GlassBackgroundBrush" Value="{DynamicResource TitleBackgroundBrushWin8}"/>
                <Setter Property="Template" Value="{StaticResource Window8ControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>







</ResourceDictionary>
